/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

import { DateRangeInput, OrderEventsEmailsEnum, OrderEventsEnum } from "./../../types/globalTypes";

// ====================================================
// GraphQL query operation: Home
// ====================================================

export interface Home_salesToday_gross {
  __typename: "Money";
  /**
   * Amount of money.
   */
  amount: number;
  /**
   * Currency code.
   */
  currency: string;
}

export interface Home_salesToday {
  __typename: "TaxedMoney";
  /**
   * Amount of money including taxes.
   */
  gross: Home_salesToday_gross;
}

export interface Home_ordersToday {
  __typename: "OrderCountableConnection";
  /**
   * A total count of items in the collection.
   */
  totalCount: number | null;
}

export interface Home_ordersToFulfill {
  __typename: "OrderCountableConnection";
  /**
   * A total count of items in the collection.
   */
  totalCount: number | null;
}

export interface Home_ordersToCapture {
  __typename: "OrderCountableConnection";
  /**
   * A total count of items in the collection.
   */
  totalCount: number | null;
}

export interface Home_productsOutOfStock {
  __typename: "ProductCountableConnection";
  /**
   * A total count of items in the collection.
   */
  totalCount: number | null;
}

export interface Home_productsInactive {
  __typename: "ProductCountableConnection";
  /**
   * A total count of items in the collection.
   */
  totalCount: number | null;
}

export interface Home_productTopToday_edges_node_revenue_gross {
  __typename: "Money";
  /**
   * Amount of money.
   */
  amount: number;
  /**
   * Currency code.
   */
  currency: string;
}

export interface Home_productTopToday_edges_node_revenue {
  __typename: "TaxedMoney";
  /**
   * Amount of money including taxes.
   */
  gross: Home_productTopToday_edges_node_revenue_gross;
}

export interface Home_productTopToday_edges_node_attributes_values {
  __typename: "AttributeValue";
  /**
   * The ID of the object.
   */
  id: string;
  /**
   * Name of a value displayed in the interface.
   */
  name: string | null;
}

export interface Home_productTopToday_edges_node_attributes {
  __typename: "SelectedAttribute";
  /**
   * Values of an attribute.
   */
  values: (Home_productTopToday_edges_node_attributes_values | null)[];
}

export interface Home_productTopToday_edges_node_product_thumbnail {
  __typename: "Image";
  /**
   * The URL of the image.
   */
  url: string;
}

export interface Home_productTopToday_edges_node_product {
  __typename: "Product";
  /**
   * The ID of the object.
   */
  id: string;
  name: string;
  /**
   * The main thumbnail for a product.
   */
  thumbnail: Home_productTopToday_edges_node_product_thumbnail | null;
}

export interface Home_productTopToday_edges_node {
  __typename: "ProductVariant";
  /**
   * The ID of the object.
   */
  id: string;
  /**
   * Total revenue generated by a variant in given period of time. Note: this field
   * should be queried using `reportProductSales` query as it uses optimizations
   * suitable for such calculations.
   */
  revenue: Home_productTopToday_edges_node_revenue | null;
  /**
   * List of attributes assigned to this variant.
   */
  attributes: Home_productTopToday_edges_node_attributes[];
  product: Home_productTopToday_edges_node_product;
  /**
   * Total quantity ordered.
   */
  quantityOrdered: number | null;
}

export interface Home_productTopToday_edges {
  __typename: "ProductVariantCountableEdge";
  /**
   * The item at the end of the edge.
   */
  node: Home_productTopToday_edges_node;
}

export interface Home_productTopToday {
  __typename: "ProductVariantCountableConnection";
  edges: Home_productTopToday_edges[];
}

export interface Home_featuredProducts_edges_node_thumbnail {
  __typename: "Image";
  /**
   * The URL of the image.
   */
  url: string;
}

export interface Home_featuredProducts_edges_node_defaultVariant_revenue_gross {
  __typename: "Money";
  /**
   * Amount of money.
   */
  amount: number;
  /**
   * Currency code.
   */
  currency: string;
}

export interface Home_featuredProducts_edges_node_defaultVariant_revenue {
  __typename: "TaxedMoney";
  /**
   * Amount of money including taxes.
   */
  gross: Home_featuredProducts_edges_node_defaultVariant_revenue_gross;
}

export interface Home_featuredProducts_edges_node_defaultVariant {
  __typename: "ProductVariant";
  /**
   * The ID of the object.
   */
  id: string;
  /**
   * Total quantity ordered.
   */
  quantityOrdered: number | null;
  /**
   * Total revenue generated by a variant in given period of time. Note: this field
   * should be queried using `reportProductSales` query as it uses optimizations
   * suitable for such calculations.
   */
  revenue: Home_featuredProducts_edges_node_defaultVariant_revenue | null;
}

export interface Home_featuredProducts_edges_node {
  __typename: "Product";
  /**
   * The ID of the object.
   */
  id: string;
  name: string;
  /**
   * The main thumbnail for a product.
   */
  thumbnail: Home_featuredProducts_edges_node_thumbnail | null;
  defaultVariant: Home_featuredProducts_edges_node_defaultVariant | null;
}

export interface Home_featuredProducts_edges {
  __typename: "ProductCountableEdge";
  /**
   * The item at the end of the edge.
   */
  node: Home_featuredProducts_edges_node;
}

export interface Home_featuredProducts {
  __typename: "ProductCountableConnection";
  edges: Home_featuredProducts_edges[];
}

export interface Home_activities_edges_node_user {
  __typename: "User";
  /**
   * The ID of the object.
   */
  id: string;
  email: string;
}

export interface Home_activities_edges_node {
  __typename: "OrderEvent";
  /**
   * Amount of money.
   */
  amount: number | null;
  /**
   * Composed ID of the Fulfillment.
   */
  composedId: string | null;
  /**
   * Date when event happened at in ISO 8601 format.
   */
  date: any | null;
  /**
   * Email of the customer.
   */
  email: string | null;
  /**
   * Type of an email sent to the customer.
   */
  emailType: OrderEventsEmailsEnum | null;
  /**
   * The ID of the object.
   */
  id: string;
  /**
   * Content of the event.
   */
  message: string | null;
  /**
   * User-friendly number of an order.
   */
  orderNumber: string | null;
  /**
   * List of oversold lines names.
   */
  oversoldItems: (string | null)[] | null;
  /**
   * Number of items.
   */
  quantity: number | null;
  /**
   * Order event type.
   */
  type: OrderEventsEnum | null;
  /**
   * User who performed the action.
   */
  user: Home_activities_edges_node_user | null;
}

export interface Home_activities_edges {
  __typename: "OrderEventCountableEdge";
  /**
   * The item at the end of the edge.
   */
  node: Home_activities_edges_node;
}

export interface Home_activities {
  __typename: "OrderEventCountableConnection";
  edges: Home_activities_edges[];
}

export interface Home {
  /**
   * Return the total sales amount from a specific period.
   */
  salesToday: Home_salesToday | null;
  /**
   * List of orders.
   */
  ordersToday: Home_ordersToday | null;
  /**
   * List of orders.
   */
  ordersToFulfill: Home_ordersToFulfill | null;
  /**
   * List of orders.
   */
  ordersToCapture: Home_ordersToCapture | null;
  /**
   * List of the shop's products.
   */
  productsOutOfStock: Home_productsOutOfStock | null;
  /**
   * List of the shop's products.
   */
  productsInactive: Home_productsInactive | null;
  /**
   * List of top selling products.
   */
  productTopToday: Home_productTopToday | null;
  /**
   * List of the shop's products.
   */
  featuredProducts: Home_featuredProducts | null;
  /**
   * List of activity events to display on homepage (at the moment it only contains order-events).
   */
  activities: Home_activities | null;
}

export interface HomeVariables {
  channel: string;
  collections?: (string | null)[] | null;
  company?: string | null;
  datePeriod: DateRangeInput;
  PERMISSION_MANAGE_PRODUCTS: boolean;
  PERMISSION_MANAGE_ORDERS: boolean;
}
